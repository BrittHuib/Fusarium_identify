AUGUSTUS
Initially, several commands for AUGUSTUS were tested. This step was taken early in the project, as the official project files were not yet available, allowing for experimentation using FASTA files from other sources. The goal was to determine which species setting should be used, and what kind of input and output files were required.

One of the first commands tested was:
augustus --species=fusarium_graminearum fusarium_unknown.faa > augustus_output.gff
However, this did not produce any sequences.
Next, the species neurospora_crassa was tested, which also did not yield results.

It turned out that the issue was with the input file format. Once a properly formatted FASTA file from another Fusarium species was used, AUGUSTUS successfully generated output with the first command.
The resulting .gff output file from AUGUSTUS was then converted to a .faa file using a custom script called AugustusConverter.

FungiSMASH
FungiSMASH was first installed via Bioconda, including the required gffread tool. The following command was intended to prepare the files for FungiSMASH:
gffread augustus_output.gff -g Fusarium_fujikuroi.FASTA -o augustus_fungiSmash.gtf

However, this did not produce the desired result. The necessary databases could not be downloaded due to their large size.
As a workaround, FungiSMASH was instead run using the web-based version, with .gff and .fasta files as input.

Quality Control
Eventually, the correct FASTA files for the project were delivered. Quality assessment was performed using FastQC, initially with:
fastqc data/fusfu1_AssemblyScaffolds.fasta
This command failed due to memory limitations.

To resolve this, additional RAM was allocated using the following command:
export _JAVA_OPTIONS="-Xmx4g"
This allowed FastQC to run successfully with:
fastqc -Xmx4g Project_fastq/M2324-017_Fusarium-spp1.fastq.gz -o fastqc_spp1_output

NanoPlot was also used to further assess read quality:
NanoPlot --fastq fastq/M2324-017_Fusarium-spp1.fastq.gz -o nanoplot_reads_output --loglength --N50

Flye
Genome assembly was performed using Flye. The initial attempt used the following command:
flye --nano-raw data/Fusfu1_AssemblyScaffolds.fasta --out-dir assembly_output --genome-size 60m

This run was unsuccessful, as the estimated genome size was too large relative to the actual total read length (43,832,314 bp).
The command was adjusted to:
flye --nano-raw fastq/M2324-017_Fusarium-spp1.fastq.gz -o assembly_spp1_output --genome-size 46m

Medaka & QUAST
To assess and improve the Flye assembly, Medaka was used for polishing. The quality of both the unpolished and polished assemblies was then evaluated using QUAST:

For the raw Flye assembly:
quast assembly_spp1_output/assembly.fasta -o quast_output

For the Medaka-polished assembly:
quast Medaka_output/consensus.fasta -o quast_output_medaka

TeloVision
To assess the completeness of chromosome ends, TeloVision was used to detect telomeric regions in both assemblies:

For the Medaka assembly:
telovision -i Medaka_output/consensus.fasta -o telovision_output_medaka --sorted

For the Flye assembly:
telovision -i assembly_spp1_output/assembly.fasta -o telovision_output --sorted
